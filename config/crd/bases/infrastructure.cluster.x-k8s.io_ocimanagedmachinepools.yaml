
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: ocimanagedmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCIManagedMachinePool
    listKind: OCIManagedMachinePoolList
    plural: ocimanagedmachinepools
    singular: ocimanagedmachinepool
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIManagedMachinePool is the Schema for the ocimanagedmachinepool
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedMachinePoolSpec defines the desired state of an
              OCI managed machine pool. An OCIManagedMachinePool translates to an
              OKE NodePool. The properties are generated from https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateNodePoolDetails
            properties:
              name:
                description: Name of the OKE NodePool. Will bet set to the MachinePool
                  name if not defined.
                type: string
              nodeEvictionNodePoolSettings:
                description: NodeEvictionNodePoolSettings defines the eviction settings.
                properties:
                  capacityReservationId:
                    description: 'EvictionGraceDuration defines the duration after
                      which OKE will give up eviction of the pods on the node. PT0M
                      will indicate you want to delete the node without cordon and
                      drain. Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601
                      e.g PT30M'
                    type: string
                  isForceDeleteAfterGraceDuration:
                    description: IsForceDeleteAfterGraceDuration defines if the underlying
                      compute instance should be deleted if you cannot evict all the
                      pods in grace period
                    type: boolean
                type: object
              nodeMetadata:
                additionalProperties:
                  type: string
                description: NodeMetadata defines a list of key/value pairs to add
                  to each underlying OCI instance in the node pool on launch.
                type: object
              nodePoolNodeConfig:
                description: NodePoolNodeConfig defines the configuration of nodes
                  in the node pool.
                properties:
                  isPvEncryptionInTransitEnabled:
                    description: IsPvEncryptionInTransitEnabled defines whether in
                      transit encryption should be enabled on the nodes.
                    type: boolean
                  kmsKeyId:
                    description: KmsKeyId  defines whether in transit encryption should
                      be enabled on the nodes.
                    type: string
                  memoryInGBs:
                    description: MemoryInGBs defines the total amount of memory available
                      to each node, in gigabytes.
                    type: string
                  nsgNames:
                    description: NsgNames defines the names of NSGs which will be
                      associated with the nodes. the NSGs are defined in OCIManagedCluster
                      object.
                    items:
                      type: string
                    type: array
                  placementConfigs:
                    description: PlacementConfigs defines the placement configurations
                      for the node pool.
                    properties:
                      availabilityDomain:
                        description: AvailabilityDomain defines the availability domain
                          in which to place nodes.
                        type: string
                      capacityReservationId:
                        description: CapacityReservationId defines the OCID of the
                          compute capacity reservation in which to place the compute
                          instance.
                        type: string
                      faultDomains:
                        description: FaultDomains defines the list of fault domains
                          in which to place nodes.
                        items:
                          type: string
                        type: array
                      subnetName:
                        description: SubnetName defines the name of the subnet which
                          need ot be associated with the Nodepool. The subnets are
                          defined in the OCiManagedCluster object.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              nodeShape:
                description: NodeShape defines the name of the node shape of the nodes
                  in the node pool.
                type: string
              nodeShapeConfig:
                description: NodeShapeConfig defines the configuration of the shape
                  to launch nodes in the node pool.
                properties:
                  memoryInGBs:
                    description: MemoryInGBs defines the total amount of memory available
                      to each node, in gigabytes.
                    type: string
                  ocpus:
                    description: Ocpus defines the total number of OCPUs available
                      to each node in the node pool.
                    type: string
                type: object
              nodeSourceViaImage:
                description: NodeSourceViaImage defines the image configuration of
                  the nodes in the nodepool.
                properties:
                  bootVolumeSizeInGBs:
                    description: BootVolumeSizeInGBs defines the size of the boot
                      volume in GBs.
                    format: int64
                    type: integer
                  imageId:
                    description: ImageId defines the OCID of the image used to boot
                      the node.
                    type: string
                type: object
              sshPublicKey:
                description: SshPublicKey defines the SSH public key on each node
                  in the node pool on launch.
                type: string
            type: object
          status:
            description: OCIManagedMachinePoolStatus defines the observed state of
              OCIManagedMachinePool
            properties:
              conditions:
                description: NetworkSpec encapsulates all things related to OCI network.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
